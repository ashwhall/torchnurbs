import numpy as np
from matplotlib import ticker
import matplotlib.pyplot as plt

"""
Plots some benchmark results to the screen.
"""

num_points = [121, 169, 289, 441, 729, 1156, 1849, 3025, 4900, 7921, 12769, 20736, 33856, 54756, 88804, 144400, 234256, 379456, 616225, 1002001]
num_points = np.array(num_points)
# nurbspython = [0.054549408245545584, 0.05869997151280267, 0.05383891694578712, 0.051484336769912493, 0.053232404568973934, 0.05176837259955712, 0.050084977454466544, 0.048785716537843075, 0.053898100724390254, 0.05355609114846041, 0.05255142273006832, 0.04184579131734266, 0.05051318958879789, 0.04528159593341403, 0.0458885522308601, 0.04573776070140837, 0.04374689914699347, 0.042051843559812674, 0.04644958194540293, 0.046973843676658175]
# nurbspy = [0.027290514610197564, 0.5924554311122998, 0.6567376720195912, 0.7425722480047533, 0.9641196478571248, 0.8949351446332856, 1.0407744135361756, 1.0881561045225165, 1.0282810889565333, 1.0348502871894802, 0.8410364689358516, 0.7903531785845791, 0.5317136315183827, 0.6337700518687198, 0.6704053646400259, 0.644995488655057, 0.5406739596765243, 0.49478964749647886, 0.476929987972286, 0.42590384636815815]
# torchnurbs_st = [0.09957674093723758, 0.11043488860499173, 0.2644937847485882, 0.3384582846603136, 0.45165195689166193, 0.5756399648581266, 0.7603204015686275, 0.9273085637273102, 0.5975883032311265, 1.1228141284363982, 1.525480791333792, 2.2787008052852875, 2.580082172872812, 2.704916430098834, 2.73363961595425, 2.4395074789423146, 2.947072827565289, 2.6265495600583364, 2.6427518439094877, 2.9360301114257354]
# torchnurbs_mt = [0.020902248910635003, 0.4052259129679175, 0.5732199598986116, 0.7574108004520662, 0.9003567731828837, 0.950492716166519, 1.1587202218450432, 1.5753767910799872, 2.081367587844024, 2.4772639274636123, 2.822132068679153, 4.133458282116453, 5.140446104547699, 4.927500528315877, 4.1653989344694216, 5.293194674586828, 2.8225222383207016, 3.5135211320807036, 2.1899554328156254, 3.109734933430445]
# torchnurbs2_st = [0.07218639539382353, 0.08800797790977176, 0.12612991147053804, 0.1833327449837649, 0.26040439859920694, 0.3572555691785344, 0.4818840297160866, 0.7430333270085339, 1.2190950548329387, 1.778354793511588, 2.343017450923434, 3.144913562026038, 4.188687081477461, 5.078058262703807, 6.177755633324863, 7.138645087437744, 8.267600950772417, 8.85013925429797, 7.584838294821369, 9.240996277001685]
# torchnurbs2_mt = [0.03260547786086911, 0.23932978229161037, 0.3764452968944099, 0.5354399638734181, 0.8076195499207607, 1.3633952962083975, 1.9045540958162652, 2.8315857882520974, 3.4033174583198096, 3.371546259980759, 5.207744345262404, 7.816147562764214, 8.792105824487713, 12.067852967474122, 11.568355594426878, 15.311641648565452, 16.620130171631015, 16.045280322931223, 15.453182276923783, 14.65051181246215]

nurbspython_mustang = [0.06151088168006101, 0.06304699599750957, 0.06360426878968818, 0.049941357986024865, 0.06467287778218761, 0.06486077603666415, 0.0649069832310592, 0.06390181666171411, 0.06542642742447916, 0.06529183052111882, 0.06484652323935561, 0.06493434505768403, 0.06477142797011781, 0.06474873500567946, 0.06470522335638616, 0.06474569329765593, 0.06454382533329861, 0.06435825888114345, 0.0641034908702299, 0.06370440537680039]
nurbspy_mustang = [0.003927368853430768, 0.8446181974167103, 1.017624715403472, 1.1430245600158198, 1.2200528362115748, 1.2805208649813544, 1.311322825528231, 1.2678387593181046, 1.2303104257458934, 1.2208138635137655, 1.196471239242116, 1.186679099416628, 0.8009626973268595, 0.7941364550060374, 0.7871088121807365, 0.7745441552354241, 0.7407091256573378, 0.6549029602110629, 0.6386161650257901, 0.6257697877014784]
torchnurbs_mustang_mt = [0.047054827583649185, 0.7708440732524251, 1.068504157117168, 1.336672975863564, 1.636996539318143, 2.640455390245496, 3.271712831589605, 4.478942656631694, 5.775135329556695, 7.064772549886871, 8.282106172640955, 9.595272782475154, 10.879139077832054, 12.343136497235381, 13.578825021691358, 14.309078352249637, 15.354158871256086, 15.781396317540903, 14.280991599933431, 14.692095377155084]
# torchnurbs_mustang_st = [0.2827925288637275, 0.343942208334142, 0.4580595613464939, 0.5681697744139185, 0.7237378375307707, 0.9951266786526447, 1.2496967468722404, 1.644805907304274, 2.134847303821767, 2.6583995058172096, 3.284669869906214, 4.047315554877175, 4.907381831653331, 5.8753828389923735, 6.855199764420416, 8.02604848990505, 9.205164775656279, 10.37421401526845, 10.296605561924284, 11.185531511311325]
torchnurbs_mustang_gpu_mt = [0.04690418478100139, 0.6485957982578141, 1.0265878383414073, 1.4192996408950003, 2.0049622409904004, 2.9313773693501974, 4.040212186379928, 5.6734021356132285, 7.6512179649457215, 10.408364134888908, 14.029429827006297, 18.848026573972138, 25.308573444261466, 33.35259628691591, 43.37331819701988, 55.96601492531797, 71.20274203026261, 88.42476557667777, 109.008309521038, 131.71394050550714]
# torchnurbs_mustang_gpu_st = [0.25630822189002467, 0.3207234792680941, 0.45106420374201806, 0.5847669592048357, 0.7924651710553597, 1.0371991101071294, 1.3576294379205793, 1.7927972553652072, 2.3301160517902084, 3.0344926404395864, 3.9256768993957234, 5.0790407654322145, 6.513761984847957, 8.329125545958586, 10.635209094968825, 13.5543576972312, 17.23009892951613, 21.77090015933325, 27.4369114816496, 34.62062027281995]


plt.figure().subplots_adjust(bottom=0.15)
def plot(vals, name):
    top_score = np.max(vals)
    if top_score > 1:
        top_score = f"{int(round(top_score))}M"
    else:
        top_score = f"{int(round(top_score * 1000))}K"
    # score_str = int(round(top_score)) if top_score > 1 else
    plt.plot(num_points, vals, label=f"{name} [best: {top_score}]")

plot(torchnurbs_mustang_gpu_mt, "TorchNurbs-GPU")
plot(torchnurbs_mustang_mt, "TorchNurbs")
plot(nurbspy_mustang, "NurbsPy (vectorised NumPy)")
plot(nurbspython_mustang, "NURBS-Python (pure Python)")


plt.title("Points Sampled per Second")
plt.legend()
plt.xlabel("Points sampled")
plt.ylabel("Million points per second")
plt.xscale("log")
plt.gca().xaxis.set_major_formatter(ticker.StrMethodFormatter('{x:,.0f}'))
plt.show()
